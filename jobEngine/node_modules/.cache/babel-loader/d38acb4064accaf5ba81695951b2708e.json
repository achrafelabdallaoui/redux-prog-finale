{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\infotech\\\\Desktop\\\\jobEngine\\\\src\\\\components\\\\MainSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport Job from \"./Job\"; // Componente React per la ricerca principale di lavori remoti\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainSearch = () => {\n  _s();\n\n  // Stato locale per memorizzare la query di ricerca\n  const [query, setQuery] = useState(\"\"); // Stato locale per memorizzare l'elenco dei lavori\n\n  const [jobs, setJobs] = useState([]); // Hook di navigazione per spostarsi tra le pagine\n\n  const navigate = useNavigate(); // Endpoint di base per la chiamata API di ricerca\n\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?search=\"; // Gestisce il cambiamento nella barra di ricerca\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  }; // Gestisce la presentazione della query di ricerca\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // Esegui la chiamata API con la query di ricerca e imposta l'elenco dei lavori\n      const response = await fetch(baseEndpoint + query + \"&limit=20\");\n\n      if (response.ok) {\n        const {\n          data\n        } = await response.json();\n        setJobs(data);\n      } else {\n        // Gestisci un errore se la risposta non è positiva\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      // Gestisci eventuali errori durante la chiamata API\n      console.log(error);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // Layout a griglia di Bootstrap per visualizzare la barra di ricerca e i risultati\n    _jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          className: \"d-flex flex-wrap align-items-center mx-auto my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-1 me-auto\",\n            children: \"Remote Jobs Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-primary\",\n            onClick: () => navigate(\"/favourites\"),\n            children: \"go to Favourites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          className: \"mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"search\",\n              value: query,\n              onChange: handleChange,\n              placeholder: \"type and press Enter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          className: \"mx-auto mb-5\",\n          children: jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n            data: jobData\n          }, jobData._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(MainSearch, \"+RDEzBL7BRFmMgG7ccwFFHvuCEA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MainSearch;\nexport default MainSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainSearch\");","map":{"version":3,"names":["useState","Container","Row","Col","Form","Button","useNavigate","Job","MainSearch","query","setQuery","jobs","setJobs","navigate","baseEndpoint","handleChange","e","target","value","handleSubmit","preventDefault","response","fetch","ok","data","json","alert","error","console","log","map","jobData","_id"],"sources":["C:/Users/infotech/Desktop/jobEngine/src/components/MainSearch.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport Job from \"./Job\";\n\n// Componente React per la ricerca principale di lavori remoti\nconst MainSearch = () => {\n  // Stato locale per memorizzare la query di ricerca\n  const [query, setQuery] = useState(\"\");\n\n  // Stato locale per memorizzare l'elenco dei lavori\n  const [jobs, setJobs] = useState([]);\n\n  // Hook di navigazione per spostarsi tra le pagine\n  const navigate = useNavigate();\n\n  // Endpoint di base per la chiamata API di ricerca\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?search=\";\n\n  // Gestisce il cambiamento nella barra di ricerca\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  // Gestisce la presentazione della query di ricerca\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Esegui la chiamata API con la query di ricerca e imposta l'elenco dei lavori\n      const response = await fetch(baseEndpoint + query + \"&limit=20\");\n      if (response.ok) {\n        const { data } = await response.json();\n        setJobs(data);\n      } else {\n        // Gestisci un errore se la risposta non è positiva\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      // Gestisci eventuali errori durante la chiamata API\n      console.log(error);\n    }\n  };\n\n  return (\n    // Layout a griglia di Bootstrap per visualizzare la barra di ricerca e i risultati\n    <Container>\n      <Row>\n        {/* Intestazione con il titolo e un pulsante per andare alla pagina dei preferiti */}\n        <Col xs={10} className=\"d-flex flex-wrap align-items-center mx-auto my-3\">\n          <h1 className=\"display-1 me-auto\">Remote Jobs Search</h1>\n          {/* Pulsante per andare alla pagina dei preferiti */}\n          <Button variant=\"outline-primary\" onClick={() => navigate(\"/favourites\")}>\n            go to Favourites\n          </Button>\n        </Col>\n\n        {/* Form per la barra di ricerca */}\n        <Col xs={10} className=\"mx-auto\">\n          <Form onSubmit={handleSubmit}>\n            <Form.Control type=\"search\" value={query} onChange={handleChange} placeholder=\"type and press Enter\" />\n          </Form>\n        </Col>\n\n        {/* Elenco dei risultati della ricerca */}\n        <Col xs={10} className=\"mx-auto mb-5\">\n          {/* Mappa attraverso l'elenco dei lavori e visualizza ciascun lavoro utilizzando il componente Job */}\n          {jobs.map((jobData) => (\n            <Job key={jobData._id} data={jobData} />\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default MainSearch;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,iBAAlD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;;;AACA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC,CAFuB,CAIvB;;EACA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC,CALuB,CAOvB;;EACA,MAAMa,QAAQ,GAAGP,WAAW,EAA5B,CARuB,CAUvB;;EACA,MAAMQ,YAAY,GAAG,yDAArB,CAXuB,CAavB;;EACA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1BN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;EACD,CAFD,CAduB,CAkBvB;;;EACA,MAAMC,YAAY,GAAG,MAAOH,CAAP,IAAa;IAChCA,CAAC,CAACI,cAAF;;IAEA,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,YAAY,GAAGL,KAAf,GAAuB,WAAxB,CAA5B;;MACA,IAAIY,QAAQ,CAACE,EAAb,EAAiB;QACf,MAAM;UAAEC;QAAF,IAAW,MAAMH,QAAQ,CAACI,IAAT,EAAvB;QACAb,OAAO,CAACY,IAAD,CAAP;MACD,CAHD,MAGO;QACL;QACAE,KAAK,CAAC,wBAAD,CAAL;MACD;IACF,CAVD,CAUE,OAAOC,KAAP,EAAc;MACd;MACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CAjBD;;EAmBA;IAAA;IACE;IACA,QAAC,SAAD;MAAA,uBACE,QAAC,GAAD;QAAA,wBAEE,QAAC,GAAD;UAAK,EAAE,EAAE,EAAT;UAAa,SAAS,EAAC,kDAAvB;UAAA,wBACE;YAAI,SAAS,EAAC,mBAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAGE,QAAC,MAAD;YAAQ,OAAO,EAAC,iBAAhB;YAAkC,OAAO,EAAE,MAAMd,QAAQ,CAAC,aAAD,CAAzD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAWE,QAAC,GAAD;UAAK,EAAE,EAAE,EAAT;UAAa,SAAS,EAAC,SAAvB;UAAA,uBACE,QAAC,IAAD;YAAM,QAAQ,EAAEM,YAAhB;YAAA,uBACE,QAAC,IAAD,CAAM,OAAN;cAAc,IAAI,EAAC,QAAnB;cAA4B,KAAK,EAAEV,KAAnC;cAA0C,QAAQ,EAAEM,YAApD;cAAkE,WAAW,EAAC;YAA9E;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAXF,eAkBE,QAAC,GAAD;UAAK,EAAE,EAAE,EAAT;UAAa,SAAS,EAAC,cAAvB;UAAA,UAEGJ,IAAI,CAACmB,GAAL,CAAUC,OAAD,iBACR,QAAC,GAAD;YAAuB,IAAI,EAAEA;UAA7B,GAAUA,OAAO,CAACC,GAAlB;YAAA;YAAA;YAAA;UAAA,QADD;QAFH;UAAA;UAAA;UAAA;QAAA,QAlBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFF;AA8BD,CApED;;GAAMxB,U;UAQaF,W;;;KARbE,U;AAsEN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}